<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="(t`fDO[4*mSU~Q{UuS%q" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="cGy[4VV,g?^dQO!:c,%E"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Configuration {" line1="    constructor(private isBoundary: boolean = true) {" line2="        new KindConfig((isBoundary: boolean) =&gt; this.finishConfig(isBoundary));" line3="    }" line4="    finishConfig(isBoundary: boolean) {" line5="        this.isBoundary = isBoundary;" line6="        if (this.isBoundary) {" line7="            new ChooseTagGroupRadio(ConfigureTagTransmitter)" line8="        } else {" line9="            ConfigureReceiver();" line10="        }" line11="    }" line12="}" numlines="13"></mutation><next><block type="typescript_statement" id="FZEU(:w~T(*0`@j#!^RP"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class KindConfig {" line1="    constructor(next: (isBoudary: boolean) =&gt; void, private isBoundary: boolean = true) {" line2="        input.onButtonPressed(Button.A, () =&gt; this.changeKind());" line3="        input.onButtonPressed(Button.B, () =&gt; next(this.isBoundary));" line4="        this.show();" line5="    }" line6="    changeKind() {" line7="        this.isBoundary = !this.isBoundary;" line8="        this.show();" line9="    }" line10="    show() {" line11="        if (this.isBoundary) {" line12="            basic.showIcon(IconNames.Square)" line13="        } else {" line14="            basic.clearScreen()" line15="            led.plot(2, 2)" line16="        }" line17="    }" line18="}" numlines="19"></mutation><next><block type="typescript_statement" id=";lUzCJ31-MJZYkVHzFKd"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="new Configuration()" numlines="1"></mutation></block></next></block></next></block></statement></block></xml>